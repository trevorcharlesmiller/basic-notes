// Mocks generated by Mockito 5.4.5 from annotations
// in basic_notes/test/repository/note_list_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:io' as _i2;

import 'package:basic_notes/repository/app_dir_repository.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDirectory_0 extends _i1.SmartFake implements _i2.Directory {
  _FakeDirectory_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [AppDirRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAppDirRepository extends _i1.Mock implements _i3.AppDirRepository {
  MockAppDirRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Directory applicationDirectory() =>
      (super.noSuchMethod(
            Invocation.method(#applicationDirectory, []),
            returnValue: _FakeDirectory_0(
              this,
              Invocation.method(#applicationDirectory, []),
            ),
          )
          as _i2.Directory);

  @override
  _i2.Directory homeDirectory() =>
      (super.noSuchMethod(
            Invocation.method(#homeDirectory, []),
            returnValue: _FakeDirectory_0(
              this,
              Invocation.method(#homeDirectory, []),
            ),
          )
          as _i2.Directory);
}
